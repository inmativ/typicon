import { Injectable } from '@angular/core';

import { assert } from '@utils';
import { ДатаПоСтаромуСтилю } from '@utils/old-date';

import { МЕСЯЦЕСЛОВ } from './menologion';
import { Влияние, Память, СлужбаМинеи } from './models';

@Injectable()
export class Минея {
  public найтиСлужбу(дата: ДатаПоСтаромуСтилю): СлужбаМинеи {
    /*
     TODO: В один день обычно бывает несколько памятей разных святых
     или несколько вариантов празднования памяти одного святого.
     Нужен механизм выбора конкретной памяти. */
    const [Служба] = this.получитьСписокСлужб(дата);

    const влияние = this._найтиВлияющие(дата);

    const изменённоеПоследование = влияние
      ? влияние.оказать(Служба)
      : new Служба();

    return изменённоеПоследование;
  }

  public получитьСписокСлужб(date: ДатаПоСтаромуСтилю): Память[] {
    const { day, month } = date

    const деньМесяцеслова = МЕСЯЦЕСЛОВ[month][day];
    assert(деньМесяцеслова, 'нужно добавить заготовку последования на этот день.')
    return деньМесяцеслова.памяти;
  }

  private _найтиВлияющие(дата: ДатаПоСтаромуСтилю): Влияние | undefined {
    const началоПериода = дата.minus({ days: 3 });
    const заготовкаПериода = Array(7).fill(началоПериода) as ДатаПоСтаромуСтилю[];

    const соседниеПамяти = заготовкаПериода.flatMap((начало, i) => {
      const соседняяДата = начало.plus({ days: i });
      return this.получитьСписокСлужб(соседняяДата);
    });

    const влияющаяПамять = соседниеПамяти.find(({ влияние }) => влияние?.проверить(дата));

    return влияющаяПамять?.влияние;
  }
}
